// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro

#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W  &kp E  &kp R      &kp T        &kp Y      &kp U          &kp I  &kp O      &kp P
&kp A           &kp S  &kp D  &kp F      &kp G        &kp H      &kp J          &kp K  &kp L      &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C      &kp V        &kp B      &kp N          &kp M  &kp COMMA  &kp DOT
                              &lt 2 TAB  &kp SPACE    &lt 1 RET  &kp BACKSPACE
            >;
        };

        right_layer {
            bindings = <
&kp N1      &kp N2  &kp N3  &kp N4  &kp N5    &kp N6    &kp N7    &kp N8  &kp N9     &kp N0
&kp ESCAPE  &kp N4  &kp N5  &kp N6  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp SEMI
&caps_word  &kp N7  &kp N8  &kp N9  &kp N0    &trans    &trans    &trans  &trans     &trans
                            &trans  &trans    &trans    &trans
            >;
        };

        left_layer {
            bindings = <
&kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)
&kp EXCL      &kp AT      &kp HASH       &kp DLLR      &kp PRCNT        &kp MINUS      &kp EQUAL     &kp LBKT      &kp RBKT      &kp SEMI
&trans        &trans      &trans         &trans        &trans           &kp LS(UNDER)  &kp LS(PLUS)  &kp LS(LBRC)  &kp LS(RBRC)  &kp DOT
                                         &trans        &trans           &trans         &trans
            >;
        };

        tri_layer {
            bindings = <
&kp LG(TAB)    &trans  &trans  &trans      &bt BT_SEL 0    &trans  &trans  &trans  &trans  &sys_reset
&kp LG(GRAVE)  &trans  &trans  &trans      &bt BT_SEL 1    &trans  &trans  &trans  &trans  &bootloader
&trans         &trans  &trans  &bt BT_CLR  &bt BT_SEL 2    &trans  &trans  &trans  &trans  &trans
                               &trans      &trans          &trans  &trans
            >;
        };
    };
};
